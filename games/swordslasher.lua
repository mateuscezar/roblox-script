--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.7) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (2==v0) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then v15=function(v23,v24,...)local v25=1;local v26;v23=v5(v4(v23,5),"..",function(v37)if (v2(v37,2)==79) then v26=v1(v4(v37,1,1));return "";else local v75=v3(v1(v37,16));if v26 then local v83=0;local v84;while true do if (v83==0) then v84=v6(v75,v26);v26=nil;v83=1;end if (v83==1) then return v84;end end else return v75;end end end);local function v27(v38,v39,v40)if v40 then local v76=0 -(0 + 0);local v77;while true do if (v76==0) then v77=(v38/((2 -0)^(v39-(2 -1))))%(2^(((v40-(1 + 0)) -(v39-(3 -2))) + (626 -(325 + 300))));return v77-(v77%(690 -(16 + 86 + 587)));end end else local v78=172 -(8 + 164);local v79;while true do if (v78==(0 + 0 + 0)) then v79=(2 + 0 + 0)^(v39-((414 + 667) -(252 + 828)));return (((v38%(v79 + v79))>=v79) and 1) or (1158 -(733 + 425));end end end end local function v28()local v45=0 -0;local v46;while true do if (v45==(0 -0)) then v46=v2(v23,v25,v25);v25=v25 + (1 -0);v45=(1 + 0) -0;end if (v45==((2 -1) -(0 -0))) then return v46;end end end local function v29()local v47,v48=v2(v23,v25,v25 + 1 + 1);v25=v25 + (8 -6);return (v48 * (277 -(8 + 13))) + v47;end local function v30()local v49=430 -(67 + 363);local v50;local v51;local v52;local v53;while true do if (v49==((2130 -(546 + 272)) -(1293 + 18))) then return (v53 * (33830010 -17052794)) + (v52 * (67440 -(1033 + 871))) + (v51 * (849 -(589 + 4 + 0))) + v50;end if ((490 -(334 + 156))==v49) then v50,v51,v52,v53=v2(v23,v25,v25 + ((3 + 5) -5));v25=v25 + 4;v49=478 -(51 + 426);end end end local function v31()local v54=(1232 -(470 + 523)) -(154 + 85);local v55;local v56;while true do if (v54==(1 -0)) then return (( -(3 -1) * v27(v56,67 -35)) + 1 + 0) * (2^(v27(v56,5 + 16,75 -44) -(1482 -459))) * ((((v27(v56,1 + 0,(634 + 272) -((1414 -(225 + 697)) + 394)) * ((2 -0)^((1781 -(819 + 725)) -(28 + 177)))) + v55)/((1677 -(19 + 1656))^(74 -22))) + (1242 -(864 + 377)) + 0);end if (v54==0) then v55=v30();v56=v30();v54=2 -1;end end end local function v32(v41)local v57;if  not v41 then v41=v30();if (v41==0) then return "";end end v57=v4(v23,v25,(v25 + v41) -(1276 -(419 + 856)));v25=v25 + v41;local v58={};for v73=4 -3, #v57 do v58[v73]=v3(v2(v4(v57,v73,v73)));end return v7(v58);end local v33=v30;local function v34(...)return {...},v12("#",...);end local function v35()local v59=0;local v60;local v61;local v62;local v63;local v64;local v65;local v66;local v67;local v68;while true do if (v59~=(931 -(922 + 8))) then else v62=nil;v63=nil;v59=2;end if (v59==(715 -(63 + 649))) then v66=nil;v67=nil;v59=3 + 1;end if (v59==0) then v60=0;v61=nil;v59=1;end if (v59~=(1 + 3)) then else v68=nil;while true do if (v60~=0) then else local v91=0 -0;while true do if (v91==1) then v60=2 -1;break;end if (v91==0) then v61=0;v62=nil;v91=1;end end end if (v60==(4 + 0)) then while true do if (v61==1) then local v94=0;while true do if (v94~=(345 -(286 + 58))) then else v61=7 -5;break;end if (v94~=(923 -(154 + 769))) then else v64=nil;v65=nil;v94=1;end end end if (v61~=(4 -2)) then else local v95=0;while true do if (v95==(0 -0)) then v66=nil;v67=nil;v95=1;end if (v95~=1) then else v61=3;break;end end end if (v61~=0) then else local v96=0;while true do if (v96==1) then v61=1322 -(824 + 497);break;end if (v96==(1736 -(1683 + 53))) then v62=0;v63=nil;v96=1;end end end if (v61~=(8 -5)) then else v68=nil;while true do local v97=0 + 0;while true do if (v97==(1122 -(264 + 857))) then if (v62~=0) then else local v118=0;local v119;local v120;while true do if ((0 + 0)~=v118) then else v119=1873 -(1608 + 265);v120=nil;v118=928 -(455 + 472);end if (v118~=1) then else while true do if (v119==0) then v120=623 -(382 + 241);while true do if (v120==0) then local v133=0 + 0;while true do if (v133~=(1 -0)) then else v120=1180 -(518 + 661);break;end if (v133~=(0 + 0)) then else v63={};v64={};v133=1;end end end if (v120==(1 + 0)) then v65={};v62=1 -0;break;end end break;end end break;end end end if (v62~=(3 -1)) then else local v121=0 + 0;local v122;local v123;while true do if (v121==(1 + 0)) then while true do if (v122==0) then v123=0;while true do if ((508 -(170 + 338))~=v123) then else local v134=0 -0;local v135;while true do if (v134==(0 -0)) then v135=0;while true do if (v135==0) then for v253=3 -2,v67 do local v254=0;local v255;local v256;local v257;local v258;local v259;while true do if (v254~=(0 + 0)) then else v255=0 -0;v256=nil;v254=1;end if (v254==2) then v259=nil;while true do if (v255==0) then local v339=0 -0;while true do if (v339==0) then v256=79 -(22 + 57);v257=nil;v339=1;end if (v339~=1) then else v255=1 + 0;break;end end end if (v255~=(4 -2)) then else while true do if (v256~=1) then else v259=nil;while true do if (1==v257) then if (v258==1) then v259=v28()~=0;elseif (v258==(1860 -(637 + 1221))) then v259=v31();elseif (v258~=3) then else v259=v32();end v68[v253]=v259;break;end if (v257==0) then local v399=698 -(597 + 101);local v400;while true do if ((0 -0)~=v399) then else v400=1662 -(136 + 1526);while true do if (v400==1) then v257=3 -2;break;end if (v400==(0 + 0)) then local v422=0;local v423;while true do if (v422~=0) then else v423=0 + 0;while true do if (v423==1) then v400=1;break;end if (v423~=(0 -0)) then else local v434=0;while true do if (v434~=(0 -0)) then else v258=v28();v259=nil;v434=413 -(242 + 170);end if (v434~=1) then else v423=693 -(73 + 619);break;end end end end break;end end end end break;end end end end break;end if (v256==(0 -0)) then local v383=1344 -(1208 + 136);while true do if (v383==(1 + 0)) then v256=2 -1;break;end if (v383~=0) then else v257=0;v258=nil;v383=1;end end end end break;end if (v255==(1 -0)) then local v340=0 + 0;while true do if (v340~=0) then else v258=nil;v259=nil;v340=1527 -(1406 + 120);end if (v340==1) then v255=7 -5;break;end end end end break;end if (v254~=(1 + 0)) then else v257=nil;v258=nil;v254=1 + 1;end end end v66[11 -8]=v28();v135=1;end if (v135~=(1 + 0)) then else v123=1;break;end end break;end end end if (v123==(1 + 0)) then for v137=1,v30() do local v138=0 -0;local v139;local v140;local v141;while true do if (v138==(1901 -(1766 + 135))) then v139=0;v140=nil;v138=1;end if (v138==(3 -2)) then v141=nil;while true do if (v139==1) then while true do if (v140~=(0 + 0)) then else v141=v28();if (v27(v141,2 -1,1 + 0)~=0) then else local v318=0;local v319;local v320;local v321;local v322;while true do if (v318==0) then v319=0;v320=nil;v318=1;end if (v318==(8 -6)) then while true do if (v319~=1) then else v322={v29(),v29(),nil,nil};if (v320==(0 -0)) then local v401=0;local v402;local v403;local v404;while true do if (v401==(0 + 0)) then v402=0 -0;v403=nil;v401=1;end if (1==v401) then v404=nil;while true do if (v402==0) then local v427=0 -0;while true do if ((282 -(49 + 233))==v427) then v403=0;v404=nil;v427=2 -1;end if (v427~=(1 -0)) then else v402=1;break;end end end if (v402==1) then while true do if (v403==0) then v404=0;while true do if (v404~=0) then else v322[3]=v29();v322[4]=v29();break;end end break;end end break;end end break;end end elseif (v320==1) then v322[407 -(107 + 297)]=v30();elseif (v320==(965 -(319 + 644))) then v322[3]=v30() -((1027 -(683 + 342))^(15 + 1));elseif (v320==3) then local v428=611 -(188 + 423);local v429;while true do if (v428==(0 -0)) then v429=0 + 0;while true do if (v429==0) then v322[3]=v30() -(2^16);v322[840 -(664 + 172)]=v29();break;end end break;end end end v319=4 -2;end if (v319~=3) then else if (v27(v321,3,1 + 2)~=1) then else v322[4]=v68[v322[140 -(45 + 91)]];end v63[v137]=v322;break;end if (v319==0) then local v389=767 -(241 + 526);while true do if (v389==(2 -1)) then v319=3 -2;break;end if (v389~=(150 -(76 + 74))) then else v320=v27(v141,2,3);v321=v27(v141,4,14 -8);v389=1;end end end if (v319==2) then local v390=0 -0;local v391;while true do if (v390==(0 -0)) then v391=1418 -(382 + 1036);while true do if (0~=v391) then else local v421=0 -0;while true do if (v421~=(1850 -(958 + 891))) then else v391=1 + 0;break;end if ((0 -0)~=v421) then else if (v27(v321,1,1456 -(1079 + 376))==1) then v322[5 -3]=v68[v322[810 -(423 + 385)]];end if (v27(v321,6 -4,2)==(1778 -(153 + 1624))) then v322[3]=v68[v322[874 -(801 + 70)]];end v421=1 + 0;end end end if (1==v391) then v319=9 -6;break;end end break;end end end end break;end if (v318~=(1 + 0)) then else local v375=0;while true do if (v375==(1 + 0)) then v318=5 -3;break;end if ((0 -0)==v375) then v321=nil;v322=nil;v375=1;end end end end end break;end end break;end if ((0 -0)==v139) then local v260=0;while true do if (v260~=(1 + 0)) then else v139=1 + 0;break;end if (v260==(0 + 0)) then local v293=0;while true do if (v293==0) then v140=0 + 0;v141=nil;v293=1588 -(570 + 1017);end if (v293~=(1533 -(1460 + 72))) then else v260=1 + 0;break;end end end end end end break;end end end v62=1 + 2;break;end end break;end end break;end if (v121==0) then v122=0 + 0;v123=nil;v121=1;end end end break;end if (v97~=0) then else local v113=1131 -(942 + 189);while true do if (0~=v113) then else if (v62==(1 + 0)) then local v125=0 -0;local v126;while true do if (v125~=(192 -(139 + 53))) then else v126=0;while true do if (v126~=(1366 -(342 + 1023))) then else v68={};v62=2;break;end if (v126~=(0 -0)) then else local v136=0;while true do if (v136~=0) then else v66={v63,v64,nil,v65};v67=v30();v136=1 + 0;end if (v136==(1 + 0)) then v126=1;break;end end end end break;end end end if (v62==(1 + 2)) then local v127=0;local v128;while true do if (v127==(861 -(223 + 638))) then v128=0;while true do local v131=0 + 0;local v132;while true do if (v131~=(0 -0)) then else v132=1819 -(866 + 953);while true do if (v132~=0) then else if (v128~=(272 -(129 + 142))) then else return v66;end if (0==v128) then local v246=208 -(79 + 129);while true do if (v246==(0 -0)) then for v294=1 + 0,v30() do v64[v294-(1 -0)]=v35();end for v296=1 + 0,v30() do v65[v296]=v30();end v246=733 -(470 + 262);end if (v246~=(942 -(330 + 611))) then else v128=24 -(14 + 9);break;end end end break;end end break;end end end break;end end end v113=2 -1;end if (v113~=(720 -(125 + 594))) then else v97=1 + 0;break;end end end end end break;end end break;end if (2==v60) then local v92=0 -0;while true do if (v92==(1 + 0)) then v60=3 -0;break;end if (v92~=(0 + 0)) then else v65=nil;v66=nil;v92=1;end end end if (v60==(949 -(681 + 265))) then v67=nil;v68=nil;v60=10 -6;end if (v60==1) then local v93=0;while true do if (v93==1) then v60=2;break;end if (0~=v93) then else v63=nil;v64=nil;v93=1;end end end end break;end if (v59==2) then v64=nil;v65=nil;v59=3;end end end local function v36(v42,v43,v44)local v69=0;local v70;local v71;local v72;while true do if (1==v69) then v72=v42[3];return function(...)local v85=0;local v86;local v87;local v88;local v89;local v90;while true do if (v85==1) then v88={...};v89=v12("#",...) -1;v85=2;end if (v85==2) then v90=nil;v90=function()local v98=v70;local v99=v71;local v100=v72;local v101=v34;local v102={};local v103={};local v104={};for v110=0 + 0,v89 do if ((v110>=v100) or ((5762 -(535 + 232))<=(1708 + 2332))) then v102[v110-v100]=v88[v110 + 1 + 0];else v104[v110]=v88[v110 + (2 -1)];end end local v105=(v89-v100) + 1 + 0;local v106;local v107;while true do local v111=1974 -(1955 + 16 + 3);local v112;while true do if (((1580 -754)>=((1428 -712) -(79 + 13))) and ((0 + 0)==v111)) then v112=0 + 0;while true do if ((((6943 -(529 + 188)) -(1197 + (2107 -(169 + 1563))))>(776 -(294 + 3 + 119))) and ((1 + 0)==v112)) then if (((2051 + 1616)>=(5006 -3531)) and (v107<=19)) then if ((910<=(4107 -(45 + 640))) and (v107<=((1255 + 716) -(1447 + 515)))) then if (((4162 -(1151 + 210))>=(2709 -(2883 -(642 + 601)))) and (v107<=(12 -8))) then if ((v107<=(1340 -(1184 + 155))) or (((528 -391) + 1692)==(397 + 1034))) then if ((v107>0) or ((5170 -(793 + 1106))<=((1957 -(234 + 82)) -1229))) then if ((185<(1699 -1212)) and (v106[2]<v104[v106[4]])) then v86=v86 + (780 -(351 + 428));else v86=v106[5 -2];end else local v142=0;local v143;local v144;local v145;local v146;while true do if ((v142==(4 -2)) or ((1904 -(1056 + 398))>=(2054 + 823))) then while true do if ((1==v143) or (1439<(864 -(29 + 82)))) then local v277=(0 -0) + 0;while true do if ((v277==(1 -0)) or ((3835 -(16 + 1137))<=(1888 -1345))) then v143=3 -1;break;end if (((14756 -9788)==(12381 -7413)) and (v277==(1013 -(378 + 635)))) then v146={};v145=v10({},{__index=function(v341,v342)local v355=0 + 0 + 0;local v356;local v357;while true do if (((5783 -1784)==((2029 -(505 + 587)) + 3062)) and (v355==0)) then local v386=0 -(0 -0);while true do if ((2062>=(2279 -(278 + 495 + 1114))) and (v386==((1391 -(520 + 868)) -2))) then v355=1659 -(848 + 810);break;end if ((1216<(4193 -(367 + 1319))) and (v386==(0 -0))) then v356=0 -0;v357=nil;v386=1 -0;end end end if ((v355==(1 + 0)) or ((4788 -(54 + 54))<=(3793 -(227 + 476)))) then while true do if (((0 -0)==v356) or (4837<=((6517 -(502 + 1409)) -3307))) then local v407=0 + 0;while true do if (((232 + 3078)==(2948 + 362)) and (v407==(1122 -(327 + 107 + 688)))) then v357=v146[v342];return v357[813 -(176 + 636)][v357[1536 -(852 + 682)]];end end end end break;end end end,__newindex=function(v343,v344,v345)local v358=(909 -(656 + 253)) + 0;local v359;local v360;local v361;while true do if ((v358==(1302 -(94 + 1208))) or ((7592 -4678)>=(370 + 821 + (2721 -(89 + 180))))) then v359=0 + 0;v360=nil;v358=806 -(743 + 62);end if (((1283 + 926)>=(322 + 998)) and (v358==(1 + 0))) then v361=nil;while true do if ((v359==(71 -(29 + 41))) or ((2461 -(363 + 36))==(4530 -(551 + (1110 -(440 + 385)))))) then while true do if (((6804 -4620)>800) and (v360==((0 -0) -0))) then v361=v146[v344];v361[247 -(151 + 95)][v361[2]]=v345;break;end end break;end if ((((11334 -6656) -((832 -250) + (1421 -(969 + 415))))>=(1263 + 1170)) and (v359==(1821 -((2064 -1186) + (2644 -1701))))) then local v408=0 + 0;while true do if (((2711 -731)>=(1447 + 20 + 323)) and (v408==1)) then v359=1601 -(313 + 1287);break;end if ((2372==(3677 -(592 + 713))) and (v408==((0 + 0) -0))) then v360=(0 -0) -0;v361=nil;v408=1825 -(235 + 1589);end end end end break;end end end});v277=1802 -(637 + 1164);end end end if (((6 -4)==v143) or ((659 -452)>2320)) then for v298=1 + 0 + 0,v106[4] do local v299=0;local v300;while true do if (((16257 -(34368 -22725))>3415) and (v299==(0 + 0))) then v86=v86 + (3 -2);v300=v98[v86];v299=864 -(271 + 592);end if ((v299==(686 -(149 + 536))) or ((985 -(89 + 219))==(2561 -(68 + 583)))) then if ((v300[212 -((417 -(243 + 17)) + 54)]==(464 -(424 + 15))) or ((2390 + 1769)>(21967 -17530))) then v146[v298-(211 -(201 + 9))]={v104,v300[1361 -(242 + 1116)]};else v146[v298-(1 + 0)]={v43,v300[3]};end v103[ #v103 + 1]=v146;break;end end end v104[v106[2]]=v36(v144,v145,v44);break;end if (((2074 + 2183)>=(2871 -1131)) and (v143==0)) then local v279=1986 -(1587 + 399);while true do if ((v279==1) or ((3311 + 227)>=(5592 -(66 + 1354)))) then v143=1;break;end if ((v279==(1097 -(24 + 1073))) or ((117 + 17)>(4992 -(269 + 638)))) then v144=v99[v106[1 + 2]];v145=nil;v279=1;end end end end break;end if (((4020 -(610 + (753 -489)))>=(3276 -(352 + 143))) and (v142==(4 -3))) then v145=nil;v146=nil;v142=2;end if (((6004 -4593)>(2747 -1793)) and (v142==(0 -0))) then v143=0 -0;v144=nil;v142=1 + 0;end end end elseif ((2154<(3819 + 530)) and (v107<=(97 -(45 + 50)))) then local v147=0;local v148;local v149;local v150;while true do if ((v147==(0 + 0)) or ((600 + 1284)==(4687 -(534 + 1446)))) then v148=(489 -(150 + 339)) + 0;v149=nil;v147=1 + (0 -0);end if ((v147==(1 -0)) or ((2812 -(228 + 569 + 87))>(11742 -7987))) then v150=nil;while true do if ((v148==(897 -((1303 -701) + 295))) or ((1696 -(738 + 934))>(42 + 855 + 1004))) then local v280=0 -0;while true do if (((761 -(151 + (887 -(268 + 78))))<=(5550 -(842 + 677))) and (v280==(2 -1))) then v148=1;break;end if (((2050 -(21 + 47 + 34))==(3756 -1808)) and (v280==(0 + 0))) then v149=0 + (0 -0);v150=nil;v280=1;end end end if (((3289 -1208)>(1687 -757)) and (v148==(1870 -(1644 + 225)))) then while true do if ((v149==0) or ((2244 -(764 + 672))>=(4843 -(769 + 964)))) then v150=v106[1521 -(288 + 568 + 663)];v104[v150]=v104[v150](v13(v104,v150 + (213 -(25 + 51 + 136)),v106[1649 -(1641 + 5)]));break;end end break;end end break;end end elseif ((v107==(604 -(84 + 517))) or ((8052 -5034)<(79 + 193))) then v104[v106[556 -(296 + 258)]]=v36(v99[v106[3]],nil,v44);else local v197=0 + 0;local v198;local v199;local v200;while true do if ((v197==1) or ((856 -(100 + 300))==(2756 -(79 + 1045 + 404)))) then v200=nil;while true do if ((v198==(1 + 0)) or ((20141 -15962)<=(1075 + 2798))) then while true do if ((v199==0) or (3239>(11509 -7613))) then v200=v106[2 + 0];v104[v200]=v104[v200](v13(v104,v200 + (3 -2) + 0,v87));break;end end break;end if ((((16991 -5906) -6681)>(3818 -(275 + 119))) and (v198==(451 -(331 + 120)))) then v199=0 + 0;v200=nil;v198=1;end end break;end if ((v197==(0 + 0)) or ((3932 -(577 + 519))>(9738 -5232))) then v198=0;v199=nil;v197=1 + 0;end end end elseif ((v107<=(1960 -((1435 -1033) + 1552))) or ((269 + 3215)>=4319)) then if ((v107>(1657 -(649 + 1003))) or ((12059 -9444)<=((935 + 1021) -(20 + 1697)))) then local v151=996 -(651 + 345);local v152;local v153;local v154;while true do if (((4107 -(109 + 220 + 11))==(1423 + 2344)) and (v151==(1 -0))) then v154=nil;while true do if ((2406==(3232 -(690 + (328 -192)))) and (v152==(1 + 0))) then for v301=v153 + (1 -0),v106[11 -(587 -(21 + 559))] do v154=v154   .. v104[v301];end v104[v106[2]]=v154;break;end if (((215 -((1365 -(545 + 754)) + 123 + 26))==v152) or ((1600 -(250 + 784))<(662 -172))) then local v282=0 -(11 -(10 + 1));local v283;while true do if (((1985 -((1934 -(242 + 1032)) + 1325))==v282) or (308>=(20843 -16044))) then v283=0 + 0 + (931 -(905 + 26));while true do if ((v283==(2 -1)) or ((92 + 23)==(4228 -((1471 -(55 + 377)) + 546)))) then v152=1134 -(734 + (1032 -(39 + 594)));break;end if (((7802 -5343)<((4128 -(218 + 420)) + 466)) and (v283==(1816 -(715 + 1101)))) then local v378=641 -(229 + (947 -535));while true do if (((1786 -691)>(413 + 48)) and (0==v378)) then v153=v106[3 + 0];v154=v104[v153];v378=1;end if ((v378==((598 -(418 + 179)) + 0)) or ((5931 -(1708 + 108))<(9203 -5862))) then v283=1 + 0;break;end end end end break;end end end end break;end if ((v151==0) or ((10585 -(1852 + 3980))<(5421 -(943 + 921)))) then local v247=0 -0;while true do if ((v247==(3 -2)) or ((3898 -(1039 + 196))<=(6297 -3818))) then v151=1 -0;break;end if ((v247==(0 + 0)) or ((205 + 489)>(9294 -5424))) then v152=205 -(108 + 97);v153=nil;v247=104 -(25 + 78);end end end end elseif ((2328<=2965) and (v104[v106[(1816 -(151 + 1664)) + 1]]==v104[v106[3 + 1]])) then v86=v86 + (1940 -(1020 + 919));else v86=v106[2 + 1];end elseif ((3832>(1137 -(118 + 259))) and (v107<=((2197 -1697) -(34 + (1848 -(860 + 529)))))) then v104[v106[2 + (617 -(577 + 40))]]=v43[v106[3]];elseif ((v107==(14 -6)) or ((1446 -(49 + 961))>2319)) then v104[v106[4 -(705 -(329 + 374))]][v106[1283 -((1151 -(11 + 1036)) + 1176)]]=v104[v106[689 -(233 + (2005 -(972 + 581)))]];else v104[v106[3 -1]]=v104[v106[(1732 -1179) -(37 + 513)]] + v104[v106[712 -(237 + 471)]];end elseif ((2329>(277 + 25)) and (v107<=(8 + 6))) then if (((1492 + 385)<(3940 + 11)) and (v107<=11)) then if ((v107>(44 -(33 + 1))) or (((6448 + 3198) -6877)<(717 -(1586 -1166)))) then local v157=0 -0;local v158;local v159;local v160;local v161;local v162;while true do if ((v157==(325 -((436 -(188 + 14)) + 89))) or ((3135 -1346)<=(523 + 373))) then v162=nil;while true do if ((v158==(686 -(312 + (751 -379)))) or ((4834 -((259 -125) + 7))<=(3926 -(162 + 998)))) then for v302=v159,v87 do local v303=0;while true do if (((692 -287)<(4262 -(168 + 673))) and (v303==(0 -0))) then v162=v162 + (873 -(51 + 57 + 764));v104[v302]=v160[v162];break;end end end break;end if ((v158==0) or (4871==4966)) then local v284=0 + 0;while true do if ((4480>=((1784 -522) + 361)) and (v284==(1 + 0))) then v158=1 + 0;break;end if ((1242>=((2354 -1388) + 128)) and ((0 -0)==v284)) then local v326=0 + 0;while true do if ((v326==(729 -(131 + 597))) or ((166 + 241)>(4772 -(45 + 81)))) then v284=1 -0;break;end if (((5317 -3748)==(1590 -(7 + 14))) and (v326==(0 + (1082 -(377 + 705))))) then v159=v106[609 -(278 + 329)];v160,v161=v101(v104[v159](v104[v159 + 1]));v326=(2 + 0) -(1 + 0);end end end end end if (((1 + 0)==v158) or (((2244 + 2692) -1985)<(822 + 1495))) then local v285=0 -0;while true do if ((3835>=(3324 -((611 -(26 + 314)) + 948))) and (v285==(1863 -(1836 + 27)))) then v87=(v161 + v159) -(1 + 0);v162=(683 -(115 + 568)) -0;v285=1;end if (((1161 -(153 + 348))<=4873) and (v285==(2 -1))) then v158=2;break;end end end end break;end if (((4381 -(286 + 392))<=(5571 -(872 + 155))) and (v157==((1332 -(410 + 922)) + 0 + 0))) then local v248=0 + (1851 -(943 + 908));while true do if ((1==v248) or ((954 -(202 + 286))==(3346 + 329))) then v157=1 -0;break;end if ((v248==(0 + 0)) or ((9150 -6850)>((1246 -(54 + 465)) + 1921))) then v158=0 -0;v159=nil;v248=1;end end end if (((3 -2)==v157) or ((3423 -(222 + 48))<=((10504 -5241) -2359))) then v160=nil;v161=nil;v157=443 -(421 + 20);end end else v104[v106[2]]=v106[3]~=(0 -0);end elseif ((v107<=(48 -36)) or ((3271 -(523 + 900))<=(1893 -(169 + 565)))) then local v164=0 -0;local v165;while true do if ((v164==(0 + 0)) or (((8039 + 7925) -11505)<=(7654 -5623))) then v165=v106[2 + 0];v104[v165]=v104[v165]();break;end end elseif ((v107>(7 + 6)) or ((5824 -3576)<=(215 + 1102))) then local v205=0 -0;local v206;local v207;local v208;local v209;local v210;while true do if ((237<((7494 -2245) -(62 + 231))) and (v205==(1176 -(770 + 328 + 77)))) then v208=v206 + (110 -(20 + (214 -126)));v209={v104[v206](v104[v206 + (2 -1)],v104[v208])};v205=2 -(0 + 0);end if (((12636 -9217)>=(7811 -4887)) and (v205==(2 + 0))) then for v286=1,v207 do v104[v208 + v286]=v209[v286];end v210=v209[1 + 0 + 0];v205=3 + 0;end if (((346 + 1450)<3104) and (v205==(1299 -(426 + (2654 -(1569 + 212)))))) then v206=v106[2];v207=v106[6 -2];v205=1 + 0;end if ((v205==(1004 -(111 + 890))) or ((266 + 3477)==(5433 -(189 + 376)))) then if (v210 or ((7153 -3985)==(19781 -15283))) then local v304=534 -(355 + 179);while true do if (((1872 -(437 + 1083))==(1146 -794)) and ((0 -0)==v304)) then v104[v208]=v210;v86=v106[2 + (387 -(25 + 361))];break;end end else v86=v86 + 1;end break;end end else local v211=0 + 0;local v212;local v213;local v214;while true do if (((3710 -(235 + 502))<(4145 -775)) and (v211==(0 + 0))) then local v270=0 -0;while true do if (((691 + 305)>(158 -(57 + 36))) and (v270==(1 -0))) then v211=1 + 0;break;end if ((v270==(0 -0)) or ((9896 -5665)<=(3810 -(46 + 81)))) then v212=v106[954 -(408 + (1020 -(41 + 435)))];v213=v104[v212 + 2];v270=1313 -(1194 + 118);end end end if ((v211==(4 -2)) or ((1150 + 877)<=(3143 -(1710 + 159)))) then if (((994 + 868)>=741) and (v213>0)) then if (((1226 + 3099)>=(722 + 449)) and (v214<=v104[v212 + 1])) then local v327=0;while true do if ((v327==(0 + 0)) or (2624>(2280 + 1958))) then v86=v106[3];v104[v212 + 2 + 1]=v214;break;end end end elseif ((((14722 -(1431 + 61)) -8814)>(2751 -1633)) and (v214>=v104[v212 + (1 -0)])) then local v328=626 -(114 + 512);local v329;while true do if ((v328==(0 -0)) or ((9192 -6245)>(24131 -19287))) then v329=0;while true do if (((4363 -(50 + 367 + 189))==(2829 + 928)) and (v329==(0 -(0 -0)))) then v86=v106[7 -(691 -(22 + 665))];v104[v212 + (4 -1)]=v214;break;end end break;end end end break;end if (((1709 + 464 + 1040)==3213) and (v211==(742 -(5 + 736)))) then v214=v104[v212] + v213;v104[v212]=v214;v211=3 -1;end end end elseif ((v107<=(1392 -(138 + 1238))) or ((625 + 178)==(2402 + 1607))) then if ((v107==(1226 -(652 + 335 + 224))) or ((7621 -5488)>(245 + 2369))) then local v166=0;local v167;local v168;local v169;local v170;local v171;while true do if ((v166==(0 -0)) or ((8546 -4059)<(4842 -1834))) then local v251=0 + 0;while true do if ((v251==(1 + 0)) or (4971<=683)) then v166=1;break;end if (((5750 -2800)>=310) and (v251==(1345 -(40 + 1305)))) then v167=0 -0;v168=nil;v251=639 -((675 -216) + 179);end end end if ((v166==(4 -(423 -(170 + 251)))) or ((2470 -1309)>=3259)) then v171=nil;while true do if (((1454 + 495)<=3424) and (v167==2)) then for v305=v168,v87 do local v306=0;while true do if ((v306==(1850 -(129 + 1721))) or (2992>(9361 -5931))) then v171=v171 + (2 -1);v104[v305]=v169[v171];break;end end end break;end if (((3587 -(1399 + 203))<3696) and (v167==1)) then local v289=947 -(570 + 377);while true do if ((0==v289) or ((1659 + 765)==(1610 + 3354))) then v87=(v170 + v168) -(922 -(757 + 164));v171=0;v289=1 -0;end if (((338 -263)<=3213) and ((1698 -(1500 + 197))==v289)) then v167=2;break;end end end if ((1853<=2336) and (v167==(123 -(103 + 20)))) then local v290=0;while true do if ((1428<=(1347 + 3367)) and (v290==(0 + 0))) then local v330=0 -0;while true do if (((772 + 428)==(1735 -(221 + 314))) and (v330==1)) then v290=364 -(257 + (138 -32));break;end if ((v330==(0 -0)) or ((325 + (2706 -(397 + 727)))<=(969 + 181))) then v168=v106[2];v169,v170=v101(v104[v168](v13(v104,v168 + (434 -(396 + 37)) + (1849 -(199 + 1650)),v106[(1945 -(1014 + 917)) -11])));v330=1 + 0 + 0;end end end if (((157 -55)<(9032 -6414)) and (1==v290)) then v167=1525 -(324 + 35 + 1165);break;end end end end break;end if ((v166==(1 + 0)) or (((5012 -(26 + 487)) -(410 + 284))<=(3078 -(53 + 702 + 122)))) then v169=nil;v170=nil;v166=5 -3;end end else for v193=v106[(321 + 384) -((1047 -603) + 259)],v106[135 -(64 + 68)] do v104[v193]=nil;end end elseif ((v107<=(56 -39)) or ((402 + 511)>=3562)) then if (((2079 -(804 + 37 + 826))==((2748 -1267) -(39 + 412 + 618))) and (v106[2]==v104[v106[15 -11]])) then v86=v86 + (22 -(4 + 17));else v86=v106[1 + (223 -(18 + 203))];end elseif ((((594 -343) -131)<=2215) and (v107==(18 + 0))) then if ((4157>131) and v104[v106[2]]) then v86=v86 + (3 -2);else v86=v106[1286 -(71 + 71 + (1175 -(8 + 26)))];end else local v216=0 -0;local v217;local v218;local v219;local v220;while true do if (((1928 -(338 + (1129 -880)))<=(1814 + (658 -(469 + 69)))) and (v216==(1 + 0))) then v219=nil;v220=nil;v216=2 + 0;end if (((1134 -((2901 -2111) + 74))<=(2521 -(181 + 50))) and (v216==((1527 -(203 + 1324)) -0))) then v217=0 + 0;v218=nil;v216=2 -1;end if (((6269 -3201)>((5269 + 2682) -(7104 -(1418 + 340)))) and (v216==(153 -(104 + 47)))) then while true do if ((v217==(1 -(0 + 0))) or (1476==(3500 -2714))) then v220=nil;while true do if ((3809>585) and ((1 + 0 + 0)==v218)) then v104[v219 + 1 + 0]=v220;v104[v219]=v220[v106[1836 -((1368 -472) + 936)]];break;end if ((v218==(0 -0)) or ((1282 + (2463 -(5 + 251)))>(5121 -(244 + 233)))) then local v367=0 -0;while true do if ((1070==(2751 -(1188 + 493))) and (v367==1)) then v218=1;break;end if (((0 + 0)==v367) or ((10828 -7513)<486)) then local v387=0;while true do if (((8365 -(6325 -(435 + 284)))>(2219 -((1932 -(437 + 762)) + 257))) and (v387==(182 -(153 + 28)))) then v367=1182 -(95 + 686 + 400);break;end if ((v387==0) or (2209<=(67 + 22))) then v219=v106[2 + 0];v220=v104[v106[1468 -(83 + 1382)]];v387=1;end end end end end end break;end if ((v217==(0 -0)) or (3150<=(607 + 208))) then v218=0 -0;v219=nil;v217=1;end end break;end end end elseif ((v107<=29) or (1602<=(778 -(8 + 33)))) then if ((v107<=24) or ((12572 -(23070 -15036))<1356)) then if ((v107<=21) or ((4890 -(409 + 669))<=3559)) then if ((v107==20) or (1418<=968)) then if (((793 + 207 + 465)>(70 + 141)) and (v104[v106[1063 -(1035 + 26)]]==v106[4])) then v86=v86 + 1;else v86=v106[13 -10];end else v104[v106[2]][v106[8 -5]]=v106[5 -1];end elseif (((1009 -(39 + 301))==(2173 -(1412 + 92))) and (v107<=(141 -(112 + 7)))) then v104[v106[113 -(8 + 103)]]=v106[8 -5];elseif (((437 -(237 + (464 -(317 + 109))))<=(1082 + 3093)) and (v107==23)) then local v222=633 -((211 -79) + 501);local v223;while true do if ((v222==(0 + 0)) or ((1488 -(163 + 1082))>(410 + 836))) then v223=v106[5 -3];v104[v223]=v104[v223](v104[v223 + (4 -3)]);break;end end else v104[v106[1 + 1]]=v44[v106[3 + 0]];end elseif (((4123 -(21 + 245 + 806))<(2832 + 1594)) and (v107<=(18 + 8))) then if (((3190 -1173)>(1240 + 238)) and (v107==(40 -(4 + 11)))) then v104[v106[4 -2]]=v104[v106[10 -7]];else v44[v106[3]]=v104[v106[(4 + 2) -4]];end elseif ((v107<=(5 + 22)) or ((1341 -(28 + 181 + 182))<(69 + 56))) then v104[v106[1469 -(418 + 1049)]]= #v104[v106[54 -(20 + 31)]];elseif (((4453 + 312)>(199 + 4220)) and (v107==(110 -(238 -156)))) then local v226=0 -0;local v227;local v228;while true do if (((18816 -14353)>(85 -66)) and ((1 + 0)==v226)) then while true do if ((v227==0) or ((4292 -(1611 + 275))<(37 + 530))) then v228=v106[460 -(222 + 236)];v104[v228](v104[v228 + 1]);break;end end break;end if ((v226==(0 + 0)) or ((2462 -(24 + 675))>=(4823 -(449 + 1337)))) then v227=1371 -(514 + 857);v228=nil;v226=1 + 0;end end else local v229=0 + 0;local v230;local v231;while true do if (((2525 -(1442 + 49 + 352))<(5278 -(11 + 279))) and (v229==(0 + (1939 -(1243 + 696))))) then v230=838 -(768 + 70);v231=nil;v229=1317 -(255 + 1061);end if (((3612 -(206 + 640))>1973) and (v229==(1 -(0 -0)))) then while true do if (((3889 -2705)>((325 + 1016) -(1724 -(365 + 526)))) and (v230==((85 -(11 + 74)) -0))) then v231=v106[2 -0];v104[v231](v13(v104,v231 + (1 -(0 + 0)),v106[1 + (523 -(377 + 144))]));break;end end break;end end end elseif (((2637 -1615)<=(3618 + 1101)) and (v107<=(63 -29))) then if ((v107<=((1996 -(967 + 571)) -(297 + 130))) or ((6835 -2184)<(3894 -1625))) then if ((v107==30) or ((6306 -4023)>3168)) then local v181=0;local v182;local v183;while true do if ((v181==(0 -0)) or ((1449 -(133 + 505 + 665))>(3662 -(146 + 912)))) then local v252=0;while true do if ((0==v252) or ((1800 + 1976)<((9248 -4687) -(790 + 241)))) then v182=v106[3 -1];v183={};v252=1649 -(971 + 677);end if ((281==(623 -(323 + 19))) and (1==v252)) then v181=1 -0;break;end end end if ((v181==(1 + 0)) or ((9630 -5593)<=(1182 + 2397))) then for v262=626 -(35 + 590), #v103 do local v263=0 + 0;local v264;local v265;while true do if (((2061 + 761)>=(2561 -(73 + 1106))) and (v263==(0 -0))) then local v307=(0 -0) + (431 -(211 + 220));while true do if ((v307==(1 + 0 + (158 -(92 + 66)))) or ((228 -167)>(3041 -(331 + 167)))) then v263=1 + (1716 -(447 + 1269));break;end if ((v307==((0 -0) + 0)) or ((306 + 1262)>(2168 -(121 + 28)))) then v264=0 -0;v265=nil;v307=3 -2;end end end if (((4242 -(496 + 578))==(5697 -2529)) and (v263==(1 + 0))) then while true do if ((v264==(0 -0)) or (((945 -632) + 3690)<=1549)) then v265=v103[v262];for v368=0, #v265 do local v369=0 + 0;local v370;local v371;local v372;local v373;while true do if ((v369==(2 + 0)) or ((1645 + 1497)<(2459 -(145 + 129 + 543)))) then while true do if ((3549>=(2478 -(593 + 1143))) and (v370==(1 -0))) then v373=v371[2];if ((3412==(9519 -6107)) and (v372==v104) and (v373>=v182)) then local v414=0 -0;while true do if ((v414==(646 -(165 + 470 + 11))) or ((6030 -(1534 + 171))<=3640)) then v183[v373]=v372[v373];v371[1 -0]=v183;break;end end end break;end if ((v370==(0 -(0 + 0))) or (328==(3806 -(975 + 41 + 465)))) then local v412=(1815 -(1341 + 474)) + 0;while true do if (((3187 + 275)<4339) and (v412==(1 + 0))) then v370=1;break;end if ((0==v412) or ((6388 -3598)<=(1313 -617))) then v371=v265[v368];v372=v371[3 -2];v412=1 + 0;end end end end break;end if ((v369==(1 + 0)) or (1118<(764 + 202))) then v372=nil;v373=nil;v369=2;end if ((4300<=(5642 -(1026 + 195))) and (v369==((321 -(10 + 10)) -((928 -663) + 36)))) then v370=248 -(105 + 143);v371=nil;v369=1 + 0;end end end break;end end break;end end end break;end end else v104[v106[5 -3]]=v104[v106[3]][v106[3 + 1]];end elseif ((v107<=(56 -(54 -30))) or (1657<(79 + (2169 -(1677 + 39))))) then v104[v106[1323 -(99 + 1222)]]={};elseif ((v107==33) or (((3071 + 1793) -(358 + 1298))>=4828)) then local v232=0 + 0;local v233;local v234;local v235;local v236;while true do if ((1488>(283 + (1170 -(228 + 846)))) and (v232==2)) then while true do if ((v233==(1 + 0)) or ((5134 -((1575 -(361 + 347)) + 492))==(6107 -2350))) then v236=0 + 0;for v331=v234,v106[10 -(1629 -(1151 + 472))] do local v332=97 -(26 + 71);local v333;while true do if (((11884 -7418)>(2213 + 65)) and (v332==0)) then v333=0;while true do if (((1387 + 1433)==(4047 -(1141 + 86))) and (v333==0)) then v236=v236 + ((8 -5) -2);v104[v331]=v235[v236];break;end end break;end end end break;end if (((36 + 4642)==(2632 + 2046)) and (v233==(1365 -(542 + 823)))) then local v315=0 + 0;while true do if (((4397 -(133 + 942))>=(211 + 1950)) and (v315==(0 -0))) then v234=v106[3 -1];v235={v104[v234](v104[v234 + (1057 -(150 + 906))])};v315=1;end if (((1 -(0 + 0))==v315) or ((2934 + 61)>(1404 + 3151))) then v233=1 -0;break;end end end end break;end if ((v232==(0 -0)) or (3595<=(1301 -(594 + 453)))) then v233=0;v234=nil;v232=1 -0;end if ((v232==1) or ((3018 -1057)>3842)) then v235=nil;v236=nil;v232=6 -4;end end else local v237=0 + 0;local v238;local v239;local v240;while true do if ((4226<(10223 -5349)) and (v237==(0 -0))) then local v274=0 + 0;while true do if (((1202 -(85 + 699))<(2647 + 757)) and (v274==(503 -(46 + 456)))) then v237=1 + 0;break;end if ((583<=(1673 + 1135)) and (v274==(0 + 0))) then v238=v106[(720 -388) -((681 -(277 + 182)) + 108)];v239=v104[v238];v274=1 + 0;end end end if ((2502>=571) and (v237==((4102 -2302) -(1066 + 733)))) then v240=v104[v238 + 2 + 0];if ((v240>(0 -0)) or ((1253 + 3242)<=168)) then if ((v239>v104[v238 + (2 -1)]) or (((3189 -868) + 847)<=(7178 -4081))) then v86=v106[1235 -(1026 + 206)];else v104[v238 + 2 + 1]=v239;end elseif (((5179 -2343)<=((8829 + 813) -(17919 -11545))) and (v239<v104[v238 + 1])) then v86=v106[(3 + 4) -(699 -(585 + 110))];else v104[v238 + 3 + 0]=v239;end break;end end end elseif ((((5298 -(226 + 714)) -(84 + 1288))>2472) and (v107<=(60 -23))) then if ((v107<=(11 + 24)) or ((17022 -12355)>(6327 -(1358 + 172)))) then local v187=0 -0;local v188;local v189;local v190;local v191;while true do if ((v187==(473 -(7 + 465))) or ((5787 -(479 + 582))<((4863 -(299 + 1585)) -1719))) then v190=nil;v191=nil;v187=2;end if (((2616 + 325)<=((5276 -(13 + 145)) -(121 + 1748))) and (v187==(0 + 0))) then v188=1807 -(271 + (1715 -(129 + 50)));v189=nil;v187=1 + (395 -(312 + 83));end if ((v187==(460 -(193 + 265))) or (((3569 -1527) -(1058 + 757))>=(7283 -4561))) then while true do if (((3506 -(328 + 520))==(3038 -(151 + 229))) and (v188==1)) then v191=0 -0;for v308=v189,v106[1 + 3] do local v309=0 + 0;local v310;while true do if (((8696 -5981)>=73) and (v309==(0 + 0))) then v310=0 + 0 + 0;while true do if ((v310==0) or (((274 -171) + 1949)>(6231 -4170))) then v191=v191 + (1860 -(980 + 879)) + 0;v104[v308]=v190[v191];break;end end break;end end end break;end if (((543 -(15 + 46))<=((3838 -(1654 + 211)) + (3469 -2059))) and ((0 + (0 -0))==v188)) then local v292=1907 -((3479 -1981) + 409);while true do if (((3354 -2484)>=((51 + 861) -(172 + 1))) and (0==v292)) then v189=v106[3 -1];v190={v104[v189](v13(v104,v189 + 1,v87))};v292=47 -(9 + 37);end if ((v292==(2 -1)) or ((85 + 2197)>=(1649 + 2240))) then v188=1 -0;break;end end end end break;end end elseif ((2539>(4168 -1661)) and (v107==(115 -79))) then local v241=0;local v242;while true do if ((v241==0) or ((16736 -11901)<(302 + 1001))) then v242=v106[2];v104[v242](v13(v104,v242 + (1 -0),v87));break;end end elseif ( not v104[v106[2]] or (((7431 -2842) + 181)<=(2782 -(854 + 1118)))) then v86=v86 + (3 -2);else v86=v106[(768 -(185 + 576)) -4];end elseif ((3104>(7072 -5592)) and (v107<=(46 -(1851 -(590 + 1253))))) then v86=v106[8 -5];elseif (((1330 + 1343)==(256 + (3555 -1138))) and (v107==39)) then v43[v106[3 -0]]=v104[v106[1 + 1]];else do return;end end v86=v86 + (584 -(574 + 9));break;end if (((3426 -(63 + 1061))<=((17232 -(955 + 472)) -11583)) and (v112==(1206 -(353 + 853)))) then local v124=0;while true do if ((v124==(0 + 0)) or ((3371 -(158 + 4 + 92))<1721)) then v106=v98[v86];v107=v106[1 -0];v124=1 + 0 + 0;end if (((2019 -(43 + 12))>(3274 -(307 + 1093 + 440))) and (v124==(2 -1))) then v112=1 + 0;break;end end end end break;end end end end;v85=3;end if (v85==0) then v86=1;v87= -1;v85=1;end if (v85==3) then A,B=v34(v11(v90));if  not A[1] then local v108=0;local v109;while true do if (v108==0) then v109=v42[4][v86] or "?";error("Script error at ["   .. v109   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end break;end end end;end if (0==v69) then v70=v42[1];v71=v42[2];v69=1;end end end return v36(v35(),{},v24)(...);end;v15("LOL!",v9(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end end end